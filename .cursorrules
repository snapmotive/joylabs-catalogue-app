Phase 1: Planning and Agreement

1.	⁠Propose a detailed plan: Before initiating any code changes, present a comprehensive plan outlining the proposed modifications. This plan must explicitly demonstrate adherence to best practices (e.g., code style, architecture, security, performance).
2.	⁠Seek feedback and approval: Await explicit feedback and approval on the proposed plan. Do not proceed with any implementation until the plan is mutually agreed upon and a clear "go-ahead" is received.

Phase 2: Implementation and Testing

1.	⁠Execute the agreed-upon plan: Implement the code changes strictly according to the approved plan.
2.	⁠Maintain test integrity: If existing tests fail due to your changes, prioritize fixing those tests to ensure their continued validity and the accurate reflection of the codebase's behavior.
3.	⁠Run all project tests: Upon completion of the implementation, run all tests within the project to verify the integrity and functionality of the entire codebase.
4.	⁠Iterative testing for large changes: For substantial changes, run relevant tests periodically throughout the implementation process. This helps in isolating issues more easily and prevents accumulation of errors.
5.	⁠Commit upon success: Once all tests pass, create a new, descriptive commit that encapsulates the completed work.

IMPORTANT Guidelines MUST BE RESPECTED:

•	⁠Strict adherence to plan: Do not introduce any changes that were not explicitly part of the agreed-upon plan.
•	Do NOT run the app for me for testing.
•	Do NOT run an EAS build without my explicit request.
•	Do NOT commit and push to git without my explicit request.
